echo "Starting provision..."

ROCKYOU="/usr/share/wordlists/rockyou.txt.gz"
LINPEAS="/opt/linpeas.sh"
PSPY="/opt/pspy64"
PWNCAT_DIR="/opt/pwncat"
NVIM_CONF_DIR=".config/nvim"
DEV_DIR="/home/vagrant/Developer"

export DEBIAN_FRONTEND=noninteractive

#Creates a copy if it not exists
cp -n .zshrc .zshrc.bak

# Copies the original content to .zshrc to prevent duplicates
cp .zshrc.bak .zshrc

# Adds the ability to do partial search on up and down arrow
cat >> .zshrc <<-EOF

export PATH=/home/vagrant/.local/bin:$PATH

autoload -U up-line-or-beginning-search
autoload -U down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search
bindkey "\${terminfo[kcuu1]}" up-line-or-beginning-search # Up
bindkey "\${terminfo[kcud1]}" down-line-or-beginning-search # Down

# Use Ctrl-V to edit the command line in editor
autoload edit-command-line; zle -N edit-command-line
bindkey '^v' edit-command-line

alias gs=lazygit
EOF

echo "Installing applications with apt..."
apt -qq -y install \
    seclists \
    python3.10-venv \
    jq \
    rg \
    2>/dev/null
    
# (Re)Installing nvim
if [[ $(which nvim) ]]; then
    echo "Updating nvim"
else
    echo "Installing nvim"
fi
wget  https://github.com/neovim/neovim/releases/latest/download/nvim.appimage -P /tmp
chmod +x /tmp/nvim.appimage
mv /tmp/nvim.appimage /usr/local/bin/nvim

if [[ ! $(which lazygit) ]]; then
    echo "Installing lazygit"
    LAZYGIT_VERSION=$(curl -s "https://api.github.com/repos/jesseduffield/lazygit/releases/latest" | grep '"tag_name":' |  sed -E 's/.*"v*([^"]+)".*/\1/') 
    curl -Lo lazygit.tar.gz "https://github.com/jesseduffield/lazygit/releases/latest/download/lazygit_${LAZYGIT_VERSION}_Linux_x86_64.tar.gz"
    tar xf lazygit.tar.gz -C /usr/local/bin lazygit
fi

if [[  ! -d "$PWNCAT_DIR" ]]; then
    echo "Downloading pwncat..."
    git clone https://github.com/calebstewart/pwncat.git $PWNCAT_DIR
    python -m venv $PWNCAT_DIR
    $PWNCAT_DIR/bin/pip install pwncat-cs
    rm -f /usr/local/bin/pwncat-cs
    ln -s $PWNCAT_DIR/bin/pwncat-cs /usr/local/bin
else
    git -C $DEV_DIR/neogen fetch
fi

if [[  ! -d "$DEV_DIR" ]]; then
    echo "Creating Developer path"
    mkdir $DEV_DIR
    chown -R vagrant:vagrant $DEV_DIR
fi

if [[  ! -d "$DEV_DIR/neogen" ]]; then
    echo "Pulling neogen"
    git clone https://github.com/danymat/neogen $DEV_DIR/neogen
    chown -R vagrant:vagrant $DEV_DIR/neogen
else
    git -C $DEV_DIR/neogen fetch
fi
if [[  ! -d "$DEV_DIR/neorg" ]]; then
    echo "Pulling neorg"
    git clone https://github.com/nvim-neorg/neorg $DEV_DIR/neorg
    chown -R vagrant:vagrant $DEV_DIR/neorg
else
    git -C $DEV_DIR/neorg fetch
fi

if [[  ! -d "$NVIM_CONF_DIR" ]]; then
    echo "Downloading danymat's neovim config..."
    git clone https://github.com/danymat/champagne $NVIM_CONF_DIR
    chown -R vagrant:vagrant $NVIM_CONF_DIR
else
    git -C $NVIM_CONF_DIR pull
fi

if [ -f "$ROCKYOU" ]; then
    echo "Unzipping rockyou..."
    gunzip $ROCKYOU
fi

if [ ! -f "$LINPEAS" ]; then
    echo "Downloading linpeas..."
    wget -nv https://github.com/carlospolop/PEASS-ng/releases/latest/download/linpeas.sh -P /opt
    chmod +x $LINPEAS
    ln -s $LINPEAS /usr/local/bin
fi

if [ ! -f "$PSPY" ]; then
    echo "Downloading pspy..."
    wget -nv https://github.com/DominicBreuker/pspy/releases/download/v1.2.0/pspy64 -P /opt
    chmod +x $PSPY
    ln -s $PSPY /usr/local/bin
fi

echo "Finishing provision !"
